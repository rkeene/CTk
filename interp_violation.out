tkCmds.c:	    (char *) NULL) == TCL_OK  && interp->result[0] != '\0') {
tkCmds.c:	if (interp->result[1] == '\0') {
tkCmds.c:	    if (interp->result[0] == '1') {
tkCmds.c:	    } else if (interp->result[0] == '0') {
tkCmds.c:	if (interp->result[0] == 'd'
tkCmds.c:		&& strcmp(interp->result, "disabled") == 0) goto nofocus;
tkCmds.c:    if (strstr(interp->result, "Key"))  goto focus;
tkCmds.c:    if (strstr(interp->result, "Focus"))  goto focus;
tkCmds.c:    if (strstr(interp->result, "Key"))  goto focus;
tkCmds.c:    if (strstr(interp->result, "Focus"))  goto focus;
tkEvent.c:    char *errorMsg;		/* The error message (interp->result when
tkEvent.c:    errPtr->errorMsg = (char *) ckalloc((unsigned) (strlen(interp->result)
tkEvent.c:    strcpy(errPtr->errorMsg, interp->result);
tkEvent.c:	    if (strcmp(interp->result, "\"tkerror\" is an invalid command name or ambiguous abbreviation") == 0) {
tkEvent.c:		fprintf(stderr, "    Error in tkerror: %s\n", interp->result);
tkFrame.c:		    placeArgv[1], interp->result);
tkMain.c:	fprintf(stderr, "%s\n", interp->result);
tkMain.c:	fprintf(stderr, "%s\n", interp->result);
tkMain.c:	    fprintf(stderr, "%s\n", interp->result);
tkMain.c:            Tcl_Write(errChannel, interp->result, -1);
tkMain.c:                    Tcl_Write(errChannel, interp->result, -1);
tkMain.c:                            Tcl_Write(errChannel, interp->result, -1);
tkMain.c:    if (*interp->result != 0) {
tkMain.c:	    puts(interp->result);
tkMain.c:	    fprintf(stderr, "%s\n", interp->result);
tkText.c:	TkTextPrintIndex(&index1, interp->result);
tkText.c:	    TkTextPrintIndex(&index, interp->result);
